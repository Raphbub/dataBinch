install.packages("xlsx")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("htmlwidgets")
install.packages("leaflet")
install.packages("sna")
install.packages("maptools")
install.packages("ggmap")
install.packages("igraph")
install.packages("devtools")
install.packages("rvest")
install.packages("reshape2")
install.packages("stringr")
install.packages("RPostgreSQL")
install.packages("RMySQL")
install.packages("RMongo")
install.packages("RODBC")
install.packages("RSQLite")
install.packages("e1071")
install.packages("aod")
install.packages("knitr")
install.packages("MASS")
install.packages("Amelia")
install.packages("pscl")
install.packages("caTools")
install.packages("ROCR")
install.packages("statnet")
install.packages("ergm.ego")
install.packages(c("jsonlite", "leaflet", "maptools"))
library("igraph", lib.loc="~/R/win-library/3.3")
degree
glm
fit
?daisy
install.packages("cluster")
library("cluster", lib.loc="~/R/win-library/3.3")
setwd("C:/Users/rlx/Documents")
list.files()
binches <- read.csv(file="binches.csv",sep=";")
View(binches)
e <- as.matrix(binches)
daisy(e, metric = "gower")
daisy(binches, metric = "gower")
distances <- daisy(binches, metric = "gower")
distances <- as.matrix(distances)
View(distances)
View(binches)
View(binches)
e <- as.data.frame(e)
View(e)
e <- as.data.frame(distances)
View(e)
colnames(e) <- binches[,1]
View(e)
rownames(e) <- binches[,1]
View(e)
write.csv(e,file="binches_distance_matrix.csv")
binches <- read.csv(file="binches.csv",sep=";")
e <- as.matrix(binches)
distances <- daisy(binches, metric = "gower")
distances <- as.matrix(distances)
colnames(e) <- binches[,1]
e <- as.data.frame(distances)
binches <- read.csv(file="binches.csv",sep=";")
e <- as.matrix(binches)
distances <- daisy(binches, metric = "gower")
distances <- as.matrix(distances)
e <- as.data.frame(distances)
colnames(e) <- binches[,1]
rownames(e) <- binches[,1]
View(e)
write.csv(e,file="binches_distance_matrix.csv")
dist_mi <- 1/distances
View(distances)
colnames(dist_mi) <- binches[,1]
rownames(dist_mi) <- binches[,1]
View(dist_mi)
library(qgraph)
install.packages("qgraph")
qgraph(dist_mi, layout='spring', vsize=3)
library("qgraph", lib.loc="~/R/win-library/3.3")
qgraph(dist_mi, layout='spring', vsize=3)
setwd("~/dataBinch")
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
binchUnique <- binches[,4:12]
binchUnique <- binchUnique[,-2]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist <- binchUnique[,-1]
binchDist$ABV <- as.numeric(as.character(sub("," , ".", binchDist$ABV)))
binchDist$IBU <- as.numeric(as.character(sub("," , ".", binchDist$IBU)))
binchDist$SRM <- as.numeric(as.character(sub("," , ".", binchDist$SRM)))
dist <- daisy(binchDist, metric = "gower")
dist <- as.matrix(dist)
rownames(dist) <- binchUnique[,1]
colnames(dist) <- binchUnique[,1]
json <- toJSON(dist, pretty = TRUE)
g <- graph.adjacency(dist, mode = "directed", weighted = TRUE)
e <- cbind( get.edgelist(g) , round( E(g)$weight, 3 ))
e <- as.data.frame(e)
colnames(e)[1]<-"Source"
colnames(e)[2]<-"Target"
colnames(e)[3]<-"Weight"
write.csv(e, file="rowdist.csv", row.names = FALSE)
library("RJSONIO")
library("cluster")
library("igraph")
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
binchUnique <- binches[,4:12]
binchUnique <- binchUnique[,-2]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist <- binchUnique[,-1]
binchDist$ABV <- as.numeric(as.character(sub("," , ".", binchDist$ABV)))
binchDist$IBU <- as.numeric(as.character(sub("," , ".", binchDist$IBU)))
binchDist$SRM <- as.numeric(as.character(sub("," , ".", binchDist$SRM)))
dist <- daisy(binchDist, metric = "gower")
dist <- as.matrix(dist)
rownames(dist) <- binchUnique[,1]
colnames(dist) <- binchUnique[,1]
json <- toJSON(dist, pretty = TRUE)
g <- graph.adjacency(dist, mode = "directed", weighted = TRUE)
e <- cbind( get.edgelist(g) , round( E(g)$weight, 3 ))
e <- as.data.frame(e)
colnames(e)[1]<-"Source"
colnames(e)[2]<-"Target"
colnames(e)[3]<-"Weight"
write.csv(e, file="rowdist.csv", row.names = FALSE)
View(e)
View(binchDist)
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
binchUnique <- binches[,4:12]
binchUnique <- binchUnique[,-2]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist <- binchUnique[,-1]
View(binchUnique)
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
View(binches)
binchUnique <- binches[,5:12]
View(binchUnique)
binchUnique <- binchUnique[,-8]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist$ABV <- as.numeric(as.character(sub("," , ".", binchDist$ABV)))
binchDist$IBU <- as.numeric(as.character(sub("," , ".", binchDist$IBU)))
binchDist$SRM <- as.numeric(as.character(sub("," , ".", binchDist$SRM)))
dist <- daisy(binchDist, metric = "gower")
dist <- as.matrix(dist)
rownames(dist) <- binchUnique[,1]
colnames(dist) <- binchUnique[,1]
json <- toJSON(dist, pretty = TRUE)
g <- graph.adjacency(dist, mode = "directed", weighted = TRUE)
e <- cbind( get.edgelist(g) , round( E(g)$weight, 3 ))
e <- as.data.frame(e)
colnames(e)[1]<-"Source"
colnames(e)[2]<-"Target"
colnames(e)[3]<-"Weight"
write.csv(e, file="rowdist.csv", row.names = FALSE)
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
View(binchUnique)
View(binchUnique)
View(binches)
binchUnique <- binches[,4:12]
binchUnique <- binches[,4:11]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist <- binchUnique[,-1]
binchDist$ABV <- as.numeric(as.character(sub("," , ".", binchDist$ABV)))
binchDist$IBU <- as.numeric(as.character(sub("," , ".", binchDist$IBU)))
binchDist$SRM <- as.numeric(as.character(sub("," , ".", binchDist$SRM)))
dist <- daisy(binchDist, metric = "gower")
dist <- as.matrix(dist)
rownames(dist) <- binchUnique[,1]
colnames(dist) <- binchUnique[,1]
json <- toJSON(dist, pretty = TRUE)
g <- graph.adjacency(dist, mode = "directed", weighted = TRUE)
e <- cbind( get.edgelist(g) , round( E(g)$weight, 3 ))
e <- as.data.frame(e)
colnames(e)[1]<-"Source"
colnames(e)[2]<-"Target"
colnames(e)[3]<-"Weight"
write.csv(e, file="rowdist.csv", row.names = FALSE)
View(e)
setwd("dataBinch")
setwd("~/dataBinch")
library("RJSONIO")
library("cluster")
library("igraph")
setwd("dataBinch")
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
binchUnique <- binches[,4:11]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist <- binchUnique[,-1]
binchDist$ABV <- as.numeric(as.character(sub("," , ".", binchDist$ABV)))
binchDist$IBU <- as.numeric(as.character(sub("," , ".", binchDist$IBU)))
binchDist$SRM <- as.numeric(as.character(sub("," , ".", binchDist$SRM)))
dist <- daisy(binchDist, metric = "gower")
dist <- as.matrix(dist)
rownames(dist) <- binchUnique[,1]
colnames(dist) <- binchUnique[,1]
json <- toJSON(dist, pretty = TRUE)
g <- graph.adjacency(dist, mode = "directed", weighted = TRUE)
e <- cbind( get.edgelist(g) , round( E(g)$weight, 3 ))
e <- as.data.frame(e)
colnames(e)[1]<-"Source"
colnames(e)[2]<-"Target"
colnames(e)[3]<-"Weight"
write.csv(e, file="rowdist.csv", row.names = FALSE)
setwd("~/dataBinch")
library("RJSONIO")
library("cluster")
library("igraph")
setwd("~/dataBinch")
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
binchUnique <- binches[,4:11]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist <- binchUnique[,-1]
binchDist$ABV <- as.numeric(as.character(sub("," , ".", binchDist$ABV)))
binchDist$IBU <- as.numeric(as.character(sub("," , ".", binchDist$IBU)))
binchDist$SRM <- as.numeric(as.character(sub("," , ".", binchDist$SRM)))
dist <- daisy(binchDist, metric = "gower")
dist <- as.matrix(dist)
rownames(dist) <- binchUnique[,1]
colnames(dist) <- binchUnique[,1]
json <- toJSON(dist, pretty = TRUE)
g <- graph.adjacency(dist, mode = "directed", weighted = TRUE)
e <- cbind( get.edgelist(g) , round( E(g)$weight, 3 ))
e <- as.data.frame(e)
colnames(e)[1]<-"Source"
colnames(e)[2]<-"Target"
colnames(e)[3]<-"Weight"
write.csv(e, file="rowdist.csv", row.names = FALSE)
setwd("~/dataBinch")
library("RJSONIO")
library("cluster")
library("igraph")
setwd("~/dataBinch")
binches <- fromJSON("binches.json")
binches <- lapply(binches, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
binches <- do.call("rbind", binches)
binches <- as.data.frame(binches)
binchUnique <- binches[,4:11]
binchUnique <- unique(binchUnique, incomparables = FALSE)
binchDist <- binchUnique[,-1]
binchDist$ABV <- as.numeric(as.character(sub("," , ".", binchDist$ABV)))
binchDist$IBU <- as.numeric(as.character(sub("," , ".", binchDist$IBU)))
binchDist$SRM <- as.numeric(as.character(sub("," , ".", binchDist$SRM)))
dist <- daisy(binchDist, metric = "gower")
dist <- as.matrix(dist)
rownames(dist) <- binchUnique[,1]
colnames(dist) <- binchUnique[,1]
json <- toJSON(dist, pretty = TRUE)
g <- graph.adjacency(dist, mode = "directed", weighted = TRUE)
e <- cbind( get.edgelist(g) , round( E(g)$weight, 3 ))
e <- as.data.frame(e)
colnames(e)[1]<-"Source"
colnames(e)[2]<-"Target"
colnames(e)[3]<-"Weight"
write.csv(e, file="rowdist.csv", row.names = FALSE)
